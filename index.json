{
	"openapi": "3.0.2",
	"info": {
		"version": "0.0.1-alpha",
		"title": "WhatsAPI",
		"description": "Unofficial WhatsApp API",
		"contact": {
			"name": "Kelvin Anggara",
			"email": "kelvin.kanggara@gmail.com",
			"url": "https://kanggara.me"
		},
		"license": {
			"name": "MIT",
			"url": "https://docs.restwa.my.id/LICENSE.md"
		}
	},
	"servers": [
		{
			"description": "Unofficial WhatsApp API",
			"url": "https://{environment}.restwa.my.id/v1",
			"variables": {
				"environment": {
					"description": "Server Environment",
					"default": "api",
					"enum": ["dev", "test", "api"]
				}
			}
		}
	],
	"externalDocs": {
		"description": "Find out more about WhatsAPI",
		"url": "https://docs.restwa.my.id"
	},
	"paths": {
		"/devices": {
			"description": "Sebelum dapat mengirim pesan menggunakan APImaka anda perlu menambahkan device terlebih dahulu. Anda dapat memiliki lebih dari satu device pada API . Sebuah device harusnya terasosiasi dengan sebuah nomor WhatsApp.",
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["Devices"],
				"summary": "Add Devices",
				"description": "Endpoint ini untuk menambahkan device baru yang bisa digunakan untuk pairing ke API .",
				"requestBody": {
					"description": "ID dari device yang ingin ditambahkan.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/device_id"
							},
							"examples": {
								"iphone-x": {
									"description": "Device ID dari iPhone X",
									"value": {
										"device_id": "iphone-x"
									}
								},
								"iphone-xr": {
									"description": "Device ID dari iPhone XR",
									"value": {
										"device_id": "iphone-xr"
									}
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"id": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[ [:alnum:]_\".,}{\n\r\t\\0\\w\\h:-]"
										},
										"status": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[ [:alnum:]_\".,}{\n\r\t\\0\\w\\h:-]"
										},
										"created_at": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[ [:alnum:]_\".,}{\n\r\t\\0\\w\\h:-]"
										},
										"meta": {
											"type": "object",
											"additionalProperties": false,
											"properties": {
												"location": {
													"type": "string",
													"maxLength": 100,
													"pattern": "[ [:alnum:]_\".,}{\n\r\t\\0\\w\\h:-]"
												}
											}
										}
									}
								},
								"examples": {
									"success": {
										"description": "Success Add device",
										"value": {
											"id": "iphone-x",
											"status": "disconnected",
											"created_at": "2023-06-22T06:26:42.531Z",
											"meta": {
												"location": "https://api./v1/devices/iphone-x"
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"BadRequest": {
										"$ref": "#/components/examples/BadRequest"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"Unauthorized": {
										"$ref": "#/components/examples/Unauthorized"
									}
								}
							}
						}
					},
					"403": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"Forbidden": {
										"$ref": "#/components/examples/Forbidden"
									}
								}
							}
						}
					},
					"default": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": false,
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean"
										},
										"message": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[ [:alnum:]_\".,}{\n\r\t\\0\\w\\h:-]"
										},
										"data": {
											"type": "object",
											"additionalProperties": false
										}
									}
								},
								"examples": {
									"defaultResponse": {
										"$ref": "#/components/examples/defaultResponse"
									}
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"parameters": {},
		"examples": {
			"defaultResponse": {
				"description": "400 Bad Request",
				"summary": "Device id already exists, choose another one",
				"value": {
					"success": true,
					"message": "Success.",
					"data": {}
				}
			},
			"BadRequest": {
				"description": "400 Bad Request",
				"summary": "Device id already exists, choose another one",
				"value": {
					"message": "Error: Device id already exists, choose another one."
				}
			},
			"Unauthorized": {
				"description": "401 Missing API token.",
				"summary": "API Token is missing/not provided",
				"value": {
					"message": "Missing API token."
				}
			},
			"Forbidden": {
				"description": "403 Invalid API token.",
				"summary": "API Token is invalid",
				"value": {
					"message": "Invalid API token."
				}
			}
		},
		"responses": {},
		"schemas": {
			"device_id": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"device_id": {
						"type": "string",
						"maxLength": 500,
						"pattern": "[ [:alnum:]_\".,}{\n\r\t\\0\\w\\h:-]"
					}
				}
			},
			"error": {
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"message": {
						"type": "string",
						"maxLength": 500,
						"pattern": "[ [:alnum:]_\".,}{\n\r\t\\0\\w\\h:-]"
					}
				}
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"description": "Authentication with device id"
			}
		}
	}
}
